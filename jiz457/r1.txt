 
create dsome trigger which will be fired based on the time, 
when this is start date of loan date, 
then fire the function which will set the items condition to be "loaned" 



and when the date is same or bigger than the end date of loan date,
then fire the function which will set the items condition to be "returned"

BY follow code:

  
CREATE OR REPLACE FUNCTION load_function1()
  RETURNS trigger AS
$BODY$
  BEGIN
	    update loanTable 
	    set stats = 'loaded'
	    where LocItem_startDate = '2016-11-01'
	    ;
	    
	   return new;
  END;
$BODY$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_load21
  After INSERT 
  ON loanTable
  FOR EACH ROW
  WHEN (age(CURRENT_DATE,'2016-11-01'::date)>='0 day'::interval)
  EXECUTE PROCEDURE load_function1();
                
  
  CREATE OR REPLACE FUNCTION return_function1()
  RETURNS trigger AS
$BODY$
  BEGIN
	    update loanTable 
	    set stats = 'returned'
	    where LocItem_startDate = '2017-01-01'
	    ;
	    
	   return new;
  END;
$BODY$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_load2
  After INSERT 
  ON loanTable
  FOR EACH ROW
  WHEN (age(CURRENT_DATE,'2017-01-01'::date)>='0 day'::interval)
  EXECUTE PROCEDURE return_function1();
  
  
  
  
  CREATE OR REPLACE FUNCTION load_function2()
  RETURNS trigger AS
$BODY$
  BEGIN
	    update loanTable 
	    set stats = 'loaded'
	    where LocItem_startDate = '2017-01-05'
	    ;
	    
	   return new;
  END;
$BODY$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_load31
  After INSERT 
  ON loanTable
  FOR EACH ROW
  WHEN (age(CURRENT_DATE,'2017-01-05'::date)>='0 day'::interval)
  EXECUTE PROCEDURE load_function2();
                
  
  CREATE OR REPLACE FUNCTION return_function2()
  RETURNS trigger AS
$BODY$
  BEGIN
	    update loanTable 
	    set stats = 'returned'
	    where LocItem_startDate = '2017-03-05'
	    ;
	    
	   return new;
  END;
$BODY$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_load3
  After INSERT 
  ON loanTable
  FOR EACH ROW
  WHEN (age(CURRENT_DATE,'2017-03-05'::date)>='0 day'::interval)
  EXECUTE PROCEDURE return_function2();
  
  
  ------------------------
   
  CREATE OR REPLACE FUNCTION load_function3()
  RETURNS trigger AS
$BODY$
  BEGIN
	    update loanTable 
	    set stats = 'loaded'
	    where LocItem_startDate = '2017-03-07'
	    ;
	    
	   return new;
  END;
$BODY$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_load41
  After INSERT 
  ON loanTable
  FOR EACH ROW
  WHEN (age(CURRENT_DATE,'2017-03-07'::date)>='0 day'::interval)
  EXECUTE PROCEDURE load_function3();
                
  
  CREATE OR REPLACE FUNCTION return_function3()
  RETURNS trigger AS
$BODY$
  BEGIN
	    update loanTable 
	    set stats = 'returned'
	    where LocItem_startDate = '2017-05-07'
	    ;
	    
	   return new;
  END;
$BODY$ LANGUAGE plpgsql;

CREATE TRIGGER trigger_load4
  After INSERT 
  ON loanTable
  FOR EACH ROW
  WHEN (age(CURRENT_DATE,'2017-05-07'::date)>='0 day'::interval)
  EXECUTE PROCEDURE return_function3();
  
  
  
  And then, I insert the information about loanwork table to contain all my information about informaiton of start date and end date 
  
  
  BY following code
  
  
  
  
  insert into loanTable
   SELECT
    itmletter,
    itmnumber,
    'Beijing_Museum',
    'BEIJING',
    '2016-11-01',
    '2017-01-01'
          
  from loanwork;
  
  insert into loanTable
  SELECT
    itmletter,
    itmnumber,
    'Shanghai_Museum',
    'SHANGHAI',
    '2017-01-05',
    '2017-03-05'
          
  from loanwork;
  
  
  insert into loanTable
  SELECT
    itmletter,
    itmnumber,
    'Hangzhou_Museum',
    'HANGZHOU',
    '2017-03-07',
    '2017-05-07'
  from loanwork;
  